name: PR Checks

on:
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: backstage-kind/yarn.lock

      - name: Install dependencies
        working-directory: backstage-kind
        run: yarn install --frozen-lockfile

      - name: Run security audit
        working-directory: backstage-kind
        run: yarn audit --audit-level moderate

      - name: Lint backend
        working-directory: backstage-kind
        run: yarn workspace backend lint

      - name: Lint frontend
        working-directory: backstage-kind
        run: yarn workspace app lint

      - name: Test backend
        working-directory: backstage-kind
        run: yarn workspace backend test --passWithNoTests

      - name: Test frontend
        working-directory: backstage-kind
        run: yarn workspace app test --passWithNoTests

  build-check:
    name: Build Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: backstage-kind/yarn.lock

      - name: Install dependencies
        working-directory: backstage-kind
        run: yarn install --frozen-lockfile

      - name: Build backend
        working-directory: backstage-kind
        run: yarn workspace backend build

      - name: Build frontend
        working-directory: backstage-kind
        run: yarn workspace app build

  helm-lint:
    name: Helm Chart Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.14.0'

      - name: Lint Helm chart
        run: |
          helm lint ./helm/backstage

      - name: Template Helm chart
        run: |
          helm template backstage ./helm/backstage \
            --namespace backstage \
            --set image.tag=pr-${{ github.event.pull_request.number }}

  docker-build-test:
    name: Docker Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: ./backstage-kind
          file: ./backstage-kind/Dockerfile.kind
          push: false
          tags: jaimehenao8126/backstage-production:pr-${{ github.event.pull_request.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan PR Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          scan-ref: 'jaimehenao8126/backstage-production:pr-${{ github.event.pull_request.number }}'
          format: 'sarif'
          output: 'trivy-pr-results.sarif'
          exit-code: 0  # Don't fail PR on vulnerabilities, just report

      - name: Upload PR scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-pr-results.sarif'
