apiVersion: v1
data:
  policy.csv: |-
    # Full admin access for all resources
    p, role:admin, *, *, *, allow

    # Assign admin role to specific GitHub user
    g, jaimehenao8126, role:admin

    # Also grant admin to entire Portfolio-jaime organization
    g, Portfolio-jaime:*, role:admin
  policy.default: role:readonly
  policy.matchMode: glob
  scopes: '[groups, email]'
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"policy.csv":"# Admin group has full access\np, role:admin, applications, *, */*, allow\np, role:admin, clusters, *, *, allow\np, role:admin, repositories, *, *, allow\np, role:admin, certificates, *, *, allow\np, role:admin, accounts, *, *, allow\np, role:admin, gpgkeys, *, *, allow\n\n# Developer group has limited access\np, role:developer, applications, get, */*, allow\np, role:developer, applications, sync, */*, allow\np, role:developer, repositories, get, *, allow\np, role:developer, clusters, get, *, allow\n\n# Map GitHub teams to ArgoCD roles\ng, Portfolio-jaime:argocd-admins, role:admin\ng, Portfolio-jaime:developers, role:developer\n","policy.default":"role:readonly","policy.matchMode":"glob"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"argocd-rbac-cm","namespace":"argocd"}}
    meta.helm.sh/release-name: argocd
    meta.helm.sh/release-namespace: argocd
  creationTimestamp: "2025-09-13T23:32:51Z"
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-rbac-cm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v3.1.5
    helm.sh/chart: argo-cd-8.3.7
  name: argocd-rbac-cm
  namespace: argocd
  resourceVersion: "2075883"
  uid: 8358180e-3d6b-4a02-9cb3-8d5b2a68c1c3
