apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: postgresql
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "1"  # Deploy antes que Backstage
spec:
  project: default

  # Source: Bitnami PostgreSQL chart con nuestros values
  source:
    chart: postgresql
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 16.7.27
    helm:
      releaseName: psql
      # Values desde nuestro repo
      values: |
        # Global configuration
        global:
          postgresql:
            auth:
              database: backstage
              username: backstage
              password: backstage
              postgresPassword: backstage

        # Authentication configuration
        auth:
          database: backstage
          username: backstage
          password: backstage
          postgresPassword: backstage

        # Architecture
        architecture: standalone

        # Primary configuration
        primary:
          name: primary

          # Persistence
          persistence:
            enabled: true
            size: 8Gi
            storageClass: standard
            accessModes:
              - ReadWriteOnce

          # Resources
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi

          # PostgreSQL configuration
          configuration: |-
            max_connections = 100
            shared_buffers = 128MB
            effective_cache_size = 256MB
            wal_level = replica
            max_wal_size = 1GB

          # Init DB scripts
          initdb:
            scripts:
              init.sql: |
                CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
                CREATE EXTENSION IF NOT EXISTS "pgcrypto";

        # Metrics
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: backstage
            interval: 30s

  # Destination
  destination:
    server: https://kubernetes.default.svc
    namespace: backstage

  # Sync policy
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m

  # Health check personalizado
  ignoreDifferences:
    - group: apps
      kind: StatefulSet
      jsonPointers:
        - /spec/volumeClaimTemplates
        - /spec/template/metadata/annotations
