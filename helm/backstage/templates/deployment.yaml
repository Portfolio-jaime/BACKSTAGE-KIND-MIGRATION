apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backstage.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "backstage.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "backstage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "backstage.selectorLabels" . | nindent 8 }}
        component: backend
      annotations:
        {{- if .Values.monitoring.enabled }}
        prometheus.io/scrape: "{{ .Values.monitoring.prometheus.scrape }}"
        prometheus.io/port: "{{ .Values.monitoring.prometheus.port }}"
        prometheus.io/path: "{{ .Values.monitoring.prometheus.path }}"
        {{- end }}
    spec:
      serviceAccountName: {{ include "backstage.serviceAccountName" . }}

      {{- if .Values.initContainers.enabled }}
      initContainers:
      - name: wait-for-postgres
        image: {{ .Values.initContainers.waitForPostgres.image }}
        command: ['sh', '-c']
        args:
          - |
            until nc -z {{ .Values.postgres.host }} {{ .Values.postgres.port }}; do
              echo "Waiting for PostgreSQL..."
              sleep 2
            done
            echo "PostgreSQL is ready!"
        resources:
          {{- toYaml .Values.initContainers.waitForPostgres.resources | nindent 10 }}
      {{- end }}

      containers:
      - name: backstage
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}

        ports:
        - name: http
          containerPort: 7007
          protocol: TCP

        {{- if .Values.env }}
        env:
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}

        {{- if .Values.envFrom }}
        envFrom:
        {{- toYaml .Values.envFrom | nindent 8 }}
        {{- end }}

        resources:
          {{- toYaml .Values.resources | nindent 10 }}

        startupProbe:
          httpGet:
            path: /healthcheck
            port: http
          initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.startup.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
          failureThreshold: {{ .Values.probes.startup.failureThreshold }}

        livenessProbe:
          httpGet:
            path: /healthcheck
            port: http
          initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          failureThreshold: {{ .Values.probes.liveness.failureThreshold }}

        readinessProbe:
          httpGet:
            path: /healthcheck
            port: http
          initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          failureThreshold: {{ .Values.probes.readiness.failureThreshold }}

        securityContext:
          allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
          runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
          readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
          capabilities:
            {{- toYaml .Values.securityContext.capabilities | nindent 12 }}

        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-tmp
          mountPath: /app/tmp

      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: {{ .Values.volumes.tmp.sizeLimit }}
      - name: app-tmp
        emptyDir:
          sizeLimit: {{ .Values.volumes.appTmp.sizeLimit }}

      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        seccompProfile:
          {{- toYaml .Values.securityContext.seccompProfile | nindent 10 }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
