# Bitnami PostgreSQL Helm Chart Values
# Configuración de PostgreSQL para Backstage

# Global configuration
global:
  postgresql:
    auth:
      # Database configuration
      database: backstage
      username: backstage
      # Passwords (se pueden sobrescribir con secret externo)
      password: backstage
      postgresPassword: backstage

# Authentication configuration
postgresql:
  auth:
    database: backstage
    username: backstage
    password: backstage
    postgresPassword: backstage

# Architecture
architecture: standalone  # standalone o replication

# Primary configuration
primary:
  name: primary

  # Persistence
  persistence:
    enabled: true
    size: 8Gi
    storageClass: standard
    accessModes:
      - ReadWriteOnce

  # Resources
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

  # Pod disruption budget
  podDisruptionBudget:
    create: false

  # Service configuration
  service:
    type: ClusterIP
    ports:
      postgresql: 5432

  # PostgreSQL configuration
  configuration: |-
    # Connection Settings
    max_connections = 100

    # Memory Settings
    shared_buffers = 128MB
    effective_cache_size = 256MB

    # Write Ahead Log
    wal_level = replica
    max_wal_size = 1GB
    min_wal_size = 80MB

    # Query Planning
    random_page_cost = 1.1
    effective_io_concurrency = 200

    # Logging
    log_destination = 'stderr'
    logging_collector = on
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    log_timezone = 'UTC'

  # Init DB scripts (crear extensiones necesarias)
  initdb:
    scripts:
      init.sql: |
        -- Extensiones necesarias para Backstage
        CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
        CREATE EXTENSION IF NOT EXISTS "pgcrypto";

  # Liveness probe
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  # Readiness probe
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

# Metrics
metrics:
  enabled: true

  # Prometheus exporter
  serviceMonitor:
    enabled: true
    namespace: backstage
    interval: 30s
    scrapeTimeout: 10s
    labels:
      prometheus: prometheus

  # Resources for metrics exporter
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

# Backup configuration (opcional)
backup:
  enabled: false
  # cronjob:
  #   schedule: "0 2 * * *"
  #   storage: 10Gi

# Network policy
networkPolicy:
  enabled: false
  # Si se habilita, configurar para permitir conexiones desde Backstage

# Service Account
serviceAccount:
  create: true
  name: postgresql

# Volume Permissions
volumePermissions:
  enabled: false

# PostgreSQL extended configuration
postgresqlExtendedConf:
  # Puedes agregar configuraciones adicionales aquí

# Audit logging
audit:
  logHostname: false
  logConnections: false
  logDisconnections: false
  pgAuditLog: ""
  pgAuditLogCatalog: "off"
  clientMinMessages: error

# Security
tls:
  enabled: false
  # Si se habilita, configurar certificados

# LDAP
ldap:
  enabled: false
