apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: backstage-alerts
  namespace: monitoring
  labels:
    prometheus: prometheus
    role: alert-rules
spec:
  groups:
  - name: backstage.rules
    interval: 30s
    rules:
    - alert: BackstagePodDown
      expr: kube_pod_status_phase{namespace="backstage",pod=~"backstage-.*",phase!="Running"} == 1
      for: 5m
      labels:
        severity: critical
        component: backstage
      annotations:
        summary: "Backstage pod is not running"
        description: "Backstage pod {{ $labels.pod }} is in {{ $labels.phase }} phase for more than 5 minutes."

    - alert: BackstagePodCrashLooping
      expr: rate(kube_pod_container_status_restarts_total{namespace="backstage",pod=~"backstage-.*"}[15m]) > 0
      for: 5m
      labels:
        severity: warning
        component: backstage
      annotations:
        summary: "Backstage pod is crash looping"
        description: "Backstage pod {{ $labels.pod }} has restarted {{ $value }} times in the last 15 minutes."

    - alert: BackstageHighMemoryUsage
      expr: |
        (sum(container_memory_working_set_bytes{namespace="backstage",pod=~"backstage-.*",container!=""})
        /
        sum(container_spec_memory_limit_bytes{namespace="backstage",pod=~"backstage-.*",container!=""})) > 0.85
      for: 10m
      labels:
        severity: warning
        component: backstage
      annotations:
        summary: "Backstage high memory usage"
        description: "Backstage is using {{ $value | humanizePercentage }} of its memory limit."

    - alert: BackstageHighCPUUsage
      expr: |
        sum(rate(container_cpu_usage_seconds_total{namespace="backstage",pod=~"backstage-.*",container!=""}[5m]))
        /
        sum(container_spec_cpu_quota{namespace="backstage",pod=~"backstage-.*",container!=""}/container_spec_cpu_period{namespace="backstage",pod=~"backstage-.*",container!=""}) > 0.85
      for: 10m
      labels:
        severity: warning
        component: backstage
      annotations:
        summary: "Backstage high CPU usage"
        description: "Backstage is using {{ $value | humanizePercentage }} of its CPU limit."

    - alert: BackstagePodNotReady
      expr: kube_pod_status_ready{namespace="backstage",pod=~"backstage-.*",condition="false"} == 1
      for: 5m
      labels:
        severity: warning
        component: backstage
      annotations:
        summary: "Backstage pod not ready"
        description: "Backstage pod {{ $labels.pod }} is not ready for more than 5 minutes."

    - alert: PostgreSQLDown
      expr: kube_pod_status_phase{namespace="backstage",pod=~"psql-.*",phase!="Running"} == 1
      for: 2m
      labels:
        severity: critical
        component: postgresql
      annotations:
        summary: "PostgreSQL pod is down"
        description: "PostgreSQL pod {{ $labels.pod }} is not running. Backstage database is unavailable."

    - alert: PostgreSQLHighMemoryUsage
      expr: |
        (sum(container_memory_working_set_bytes{namespace="backstage",pod=~"psql-.*",container!=""})
        /
        sum(container_spec_memory_limit_bytes{namespace="backstage",pod=~"psql-.*",container!=""})) > 0.90
      for: 10m
      labels:
        severity: warning
        component: postgresql
      annotations:
        summary: "PostgreSQL high memory usage"
        description: "PostgreSQL is using {{ $value | humanizePercentage }} of its memory limit."

    - alert: BackstageNamespaceQuotaExceeded
      expr: |
        kube_resourcequota{namespace="backstage",resource="requests.memory",type="used"}
        /
        kube_resourcequota{namespace="backstage",resource="requests.memory",type="hard"} > 0.90
      for: 5m
      labels:
        severity: warning
        component: backstage
      annotations:
        summary: "Backstage namespace quota nearly exceeded"
        description: "Backstage namespace is using {{ $value | humanizePercentage }} of its memory quota."
