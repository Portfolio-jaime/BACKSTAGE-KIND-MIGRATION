# Production configuration for Backstage running in Kubernetes
# This file overrides settings from app-config.yaml for production

app:
  title: Backstage DevOps - British Airways Training
  baseUrl: ${APP_BASE_URL}

organization:
  name: British Airways - DevOps Training

backend:
  baseUrl: ${BACKEND_BASE_URL}
  listen:
    port: 7007
    host: 0.0.0.0

  # Backend secret for authentication
  auth:
    keys:
      - secret: ${BACKEND_SECRET}

  # CORS configuration
  cors:
    origin: ${CORS_ORIGIN}
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true

  # PostgreSQL database configuration
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
      database: ${POSTGRES_DB}
      ssl: false
    pool:
      min: 2
      max: 20
      acquireTimeoutMillis: 60000
      idleTimeoutMillis: 30000

  # CSP configuration
  csp:
    connect-src: ["'self'", 'http:', 'https:', '*.kind.local']
    img-src: ["'self'", 'data:', 'https:']

  # Health check endpoints
  healthCheck:
    path: /healthcheck

  reading:
    path: /ready

# GitHub integration
integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}

# Authentication providers
auth:
  environment: production
  providers:
    # Disable guest login in production
    guest: null
    github:
      production:
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
        signIn:
          resolvers:
            - resolver: usernameMatchingUserEntityName

# Kubernetes integration
kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: https://kubernetes.default.svc
          name: kind-local
          authProvider: serviceAccount
          skipTLSVerify: true
          skipMetricsLookup: false

# ArgoCD integration
argocd:
  username: ${ARGOCD_USERNAME}
  password: ${ARGOCD_PASSWORD}
  waitCycles: 25
  appLocatorMethods:
    - type: 'config'
      instances:
        - name: argocd-main
          url: https://argocd.kind.local
          username: ${ARGOCD_USERNAME}
          password: ${ARGOCD_PASSWORD}

# Catalog configuration
catalog:
  rules:
    - allow: [Component, API, Resource, Group, User, Template, System, Domain]

  locations:
    # Platform services catalog
    - type: url
      target: https://github.com/Portfolio-jaime/BACKSTAGE-KIND-MIGRATION/blob/main/backstage-catalog/platform-services.yaml

# Proxy endpoints
proxy:
  skipInvalidTargets: true
  endpoints:
    # ArgoCD proxy
    '/api/proxy/argocd':
      target: https://argocd.kind.local
      changeOrigin: true
      secure: false
      pathRewrite:
        '^/api/proxy/argocd': ''

    # Grafana proxy
    '/grafana':
      target: http://grafana.kind.local
      changeOrigin: true
      secure: false
      pathRewrite:
        '^/api/proxy/grafana': ''

    # Prometheus proxy
    '/prometheus':
      target: http://prometheus.kind.local
      changeOrigin: true

      pathRewrite:
        '^/api/proxy/prometheus': ''

# Grafana integration
grafana:
  domain: http://grafana.kind.local
  unifiedAlerting: true

# Prometheus integration
prometheus:
  proxyPath: /prometheus/api
  uiUrl: http://prometheus.kind.local

# TechDocs configuration
techdocs:
  builder: 'local'
  publisher:
    type: 'local'
  generator:
    runIn: local
